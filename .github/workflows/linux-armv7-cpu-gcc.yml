name: linux-armv7-cpu-gcc

on: [push, pull_request]

jobs:
  linux-armv7-cpu-gcc:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2

    - name: cache-qemu
      id: cache-qemu
      uses: actions/cache@v1
      with:
        path: qemu-install
        key: qemu-arm-install-1
    - name: checkout-qemu
      if: steps.cache-qemu.outputs.cache-hit != 'true'
      uses: actions/checkout@v2
      with:
        repository: qemu/qemu
        path: qemu
        ref: 8746309137ba470d1b2e8f5ce86ac228625db940
    - name: qemu
      if: steps.cache-qemu.outputs.cache-hit != 'true'
      run: |
        cd qemu
        ./configure --prefix=install --target-list=arm-linux-user --disable-system
        make -j2
        make install
        cp -r arm-linux-user/install $GITHUB_WORKSPACE/qemu-install

    - name: arm-gnu-toolchain
      run: |
        sudo apt-get update
        sudo apt-get install g++-arm-linux-gnueabi
        
    - name: configure
      run: mkdir build && cd build && cmake -DCMAKE_TOOLCHAIN_FILE=../toolchains/arm-linux-gnueabi.toolchain.cmake -DTENGINE_BUILD_TESTS=ON ..
    - name: build
      run: cmake --build build -j 2
    - name: models
      run: |
        cd build
        wget ftp://219.139.34.182/tengine/ci_test/models.zip
        unzip models.zip
        wget ftp://219.139.34.182/tengine/ci_test/arm32_data.zip
        unzip arm32_data.zip
        mv arm32_data data
        wget ftp://219.139.34.182/tengine/ci_test/images.zip
        unzip images.zip
    - name: test
      run: |
        export PATH=$GITHUB_WORKSPACE/qemu-install/bin:$PATH
        chmod +x ./tests/test_arm32.sh
        cd build
        ../tests/test_arm32.sh
